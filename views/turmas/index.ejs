<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Turmas</title>
  <link rel="stylesheet" href="css/telaturmas.css">
  <link rel="stylesheet" href="css/footer.css">
  <link rel="stylesheet" href="css/logo.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Questrial&display=swap" rel="stylesheet">
</head>

<body>
  <div class="caixabotao" id="turmasContainer">
    <div class="botoes">
      <% turmas.forEach(turma => { %>
        <div class="turma-item" data-cod="<%= turma.cod %>">
          <a href="/turmas/<%= turma.nome %>">
            <button class="botao"><%= turma.nome %></button>
          </a>
        </div>
      <% }) %>
    </div>

<div class="botoes-finais">
  <button onclick="voltar()" class="botaodevoltar">Voltar</button>

  <% if (usuario?.tipo === "funcionario") { %>
    <button id="abrirCriarTurmaModal" class="criar">Criar Turma</button>
    <button id="abrirArquivarModal" class="arquivar">Arquivar Turmas</button>
    <a href="/turmas/arquivadas">
      <button class="botaoverarquivadas">Ver Turmas Arquivadas</button>
    </a>
  <% } %>
</div>

    <!-- Modal -->
    <div id="modalArquivar" class="modal">
      <div class="modal-conteudo">
        <h2>Selecionar Turmas para Arquivar</h2>
        <div id="listaTurmasModal">
          <% turmas.forEach(turma => { %>
            <div>
              <input type="checkbox" class="turma-modal" value="<%= turma.cod %>">
              <label><%= turma.nome %></label>
            </div>
          <% }) %>
        </div>
        <button id="confirmarArquivar">Arquivar Selecionadas</button>
        <button id="fecharModal">Cancelar</button>
      </div>
    </div>
  </div>

  <!-- Modal Criar Turma -->
<div id="modalCriarTurma" class="modal">
  <div class="modal-conteudo">
    <h2>Criar Nova Turma</h2>
    <input type="text" id="nomeNovaTurma" placeholder="Digite o nome da turma" />
    <button id="confirmarCriarTurma">Criar</button>
    <button id="fecharCriarTurma">Cancelar</button>
  </div>
</div>


  <!-- Popup de mensagem -->
  <div id="mensagem-popup"></div>

  <div id="footer"></div>
  <div id="logo"></div>

<script>
const abrirModal = document.getElementById("abrirArquivarModal");
const modal = document.getElementById("modalArquivar");
const fecharModal = document.getElementById("fecharModal");
const confirmarArquivar = document.getElementById("confirmarArquivar");
const mensagemPopup = document.getElementById("mensagem-popup");

// Criar turma
const abrirCriarModal = document.getElementById("abrirCriarTurmaModal");
const modalCriar = document.getElementById("modalCriarTurma");
const fecharCriar = document.getElementById("fecharCriarTurma");
const confirmarCriar = document.getElementById("confirmarCriarTurma");

abrirCriarModal?.addEventListener("click", () => {
  modalCriar.style.display = "flex";
});

fecharCriar?.addEventListener("click", () => {
  modalCriar.style.display = "none";
});

confirmarCriar?.addEventListener("click", () => {
  const nome = document.getElementById("nomeNovaTurma").value.trim();
  if (!nome) {
    mostrarMensagem("Digite um nome válido para a turma.", "error");
    return;
  }

  fetch("/turmas/criar", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ nome })
  })
  .then(async res => {
    const data = await res.json().catch(() => ({}));
    if (!res.ok || !data.sucesso) {
      throw new Error(data.erro || "Erro ao criar turma");
    }
    return data;
  })
  .then(data => {
    mostrarMensagem("Turma criada com sucesso!");
    modalCriar.style.display = "none";

    // Adiciona a turma na lista
    const container = document.querySelector(".botoes");
    const div = document.createElement("div");
    div.className = "turma-item";
    div.setAttribute("data-cod", data.cod);
    div.innerHTML = `
      <a href="/turmas/${encodeURIComponent(data.nome)}">
        <button class="botao">${data.nome}</button>
      </a>
    `;
    container.appendChild(div);
  })
  .catch(err => {
    console.error(err);
    mostrarMensagem(err.message, "error");
  });
});


function mostrarMensagem(texto, tipo = "success") {
  mensagemPopup.textContent = texto;
  mensagemPopup.classList.remove("error");
  if (tipo === "error") mensagemPopup.classList.add("error");
  mensagemPopup.classList.add("show");

  setTimeout(() => {
    mensagemPopup.classList.remove("show");
  }, 3000);
}

abrirModal?.addEventListener("click", () => {
  modal.style.display = "flex";
});

fecharModal?.addEventListener("click", () => {
  modal.style.display = "none";
});

confirmarArquivar?.addEventListener("click", () => {
  const selecionadas = document.querySelectorAll(".turma-modal:checked");
  if (selecionadas.length === 0) {
    mostrarMensagem("Selecione ao menos uma turma.", "error");
    return;
  }

  const confirmar = confirm(`Deseja arquivar ${selecionadas.length} turma(s)?`);
  if (!confirmar) return;

  // Fecha o modal imediatamente após confirmação
  modal.style.display = "none";

  // Processa cada turma arquivada
  selecionadas.forEach(cb => {
    fetch(`/turmas/${cb.value}/arquivar`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ arquivada: 1 })
    })
    .then(res => res.json())
    .then(data => {
      if (data.sucesso) {
        // Remove a turma da lista principal suavemente
        const turmaItemPrincipal = document.querySelector(`.turma-item[data-cod='${cb.value}']`);
        if (turmaItemPrincipal) {
          turmaItemPrincipal.style.transition = "opacity 0.5s ease, height 0.5s ease, margin 0.5s ease";
          turmaItemPrincipal.style.opacity = 0;
          turmaItemPrincipal.style.height = 0;
          turmaItemPrincipal.style.margin = 0;
          setTimeout(() => {
            turmaItemPrincipal.remove();
          }, 500);
        }

        mostrarMensagem("Turma(s) arquivada(s) com sucesso!", "success");
      } else {
        mostrarMensagem("Erro ao arquivar a turma.", "error");
      }
    })
    .catch(err => {
      console.error(err);
      mostrarMensagem("Erro na requisição.", "error");
    });
  });
});

function voltar() {
      const paginaAnterior = sessionStorage.getItem("voltarPara");

      // Se for diferente da página atual, volta para ela
      if (paginaAnterior && paginaAnterior !== location.pathname) {
        window.location.href = paginaAnterior;
      } else {
        // Se não houver registro ou for a mesma, redireciona para login ou outra rota segura
        window.location.href = "/";
      }
    }

</script>

  <script src="/js/footer.js"></script>
  <script src="/js/logo.js"></script>
</body>
</html>
